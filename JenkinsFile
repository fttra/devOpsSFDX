//@Library('Jenkinstools@master')
node {
    def sfdxHome = tool 'sfdx'
    def devHubName = "${params.Environment}"
    def sandboxName = env.SANDBOX_NAME

    //credential folder
    def resource = libraryResource resource: 'readFile-config.yml'
    println(resource)
    def config = readYaml text: resource



    //username
    def SF_USERNAME
    //SF org URL
    def SFDC_HOST
    //consumer key
    def CLIENT_ID
    //credentials
    def KEY_FILE

           
    stage ('Environment check'){
        validateEnvironment(devHubName)
    }

    stage ('Print login informations'){
    println SF_USERNAME
    println SFDC_HOST
    println CLIENT_ID
    println KEY_FILE
    }



withEnv(["HOME=${env.WORKSPACE}"]){
        stage('Authentication to Salesforce') {
            	authenticateToSalesforce(sfdxHome, config, devHubName)
	}

	stage('Update file'){	
    checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [[$class: 'CleanBeforeCheckout']], userRemoteConfigs: [[url: 'https://github.com/fttra/devOpsSFDX.git']]])
		def con = bat returnStdout: true, script: "\"${sfdxHome}/sfdx\" force:data:bulk:upsert -s Account -f import/Account.csv -i Id -u ${HUB_ORG}"
		
		println con
    }
	 stage('Logout'){
	 	def logoutStatus = bat returnStatus: true, script: "\"${sfdxHome}/sfdx\" force:auth:logout"

	 	println logoutStatus
	    }
}
}



/*Chodzi o to, ze jak masz parametry to zeby juz nie trzeba bylo ingerowac w kod skryptu

Metoda która:
1. czyta credentiale i jako parametr przyjmuje środowisko
2. Zdefiniuj liste dopuszczalnych środowisk lub sprawdź czy jest w pickliście (SPRAWDŹ CZY JEST W PICKLIŚCIE)
3. Jak nie ma credentiali to error ze nie ma srodowiska 

POZA TYM:
1. nie przypisuj wartości credentiali do zmiennych 
2. do zmienny przypisz nazwe credentiala
3. przekaz do wlasciwej metody i uzyj w withCredentials

*/


def validateEnvironment(org){
    if (config.credentials[org] == null){
        error ("There is no such environment")
    }
} 

def authenticateToSalesforce(sfdxHome, config, org){

    withCredentials([
        file(credentialsId: config.credentials[org].connapp_consumerkey_id, variable: 'CLIENT_ID'),
        file(credentialsId: config.credentials[org].cred_id,  variable: 'KEY_FILE'),
        file(credentialsId: config.credentials[org].username,  variable: 'SF_USERNAME')
    ]) {
        
        def rc = bat returnStatus: true, script: "\"${sfdxHome}/sfdx\" force:auth:jwt:grant  -i ${CLIENT_ID} -u ${SF_USERNAME} -f ${KEY_FILE}  --setdefaultusername"
        if (rc != 0) { error 'hub org authorization failed' }

        println rc
    }
}