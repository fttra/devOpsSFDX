node {
    def sfdxHome = tool 'sfdx'

           
    //username
    def HUB_ORG=env.HUB_ORG_DH
    //SF org URL
    def SFDC_HOST = env.SFDC_HOST_DH
    //consumer key
    def CONNECTED_APP_CONSUMER_KEY=env.CONNECTED_APP_CONSUMER_KEY_DH
    //credentials
    def JWT_KEY_CRED_ID = env.JWT_CRED_ID_DH

    stage ('Print login info'){
    println HUB_ORG_DH
    println SFDC_HOST
    println CONNECTED_APP_CONSUMER_KEY
    println JWT_KEY_CRED_ID
    }

withEnv(["HOME=${env.WORKSPACE}"]){
    withCredentials([file(credentialsId: JWT_KEY_CRED_ID, variable: 'jwt_key_file')]) {
        stage('Authorization') {
            	def rc = bat returnStatus: true, script: "\"${sfdxHome}/sfdx\" force:auth:jwt:grant  -u ${HUB_ORG} -f ${jwt_key_file} -i ${CONNECTED_APP_CONSUMER_KEY} --setdefaultusername"
            	if (rc != 0) { error 'hub org authorization failed' }

		println rc
	}
    dir ('C:/personal-repo/devOpsSFDX'){
        def LIST_VIEW = ""
        LIST_VIEW = load ('Account.csv')

        print LIST_VIEW
    }
/*	stage('Get a record'){		
		def acc = bat returnStdout: true, script: "\"${sfdxHome}/sfdx\" force:data:record:get -s Account -i 0017Q000005CIF9 -u ${HUB_ORG}"
		
		println acc
	 } */
	stage('Update file'){	

		def con = bat returnStdout: true, script: "\"${sfdxHome}/sfdx\" force:data:bulk:upsert -s Account -f C:/personal-repo/devOpsSFDX/ -i Id -u ${HUB_ORG}"
		
		println con
	 }	 
	 stage('Logut'){
	 	def logoutStatus = bat returnStatus: true, script: "\"${sfdxHome}/sfdx\" force:auth:logout"

	 	println logoutStatus
	 }
        }	
}
}
